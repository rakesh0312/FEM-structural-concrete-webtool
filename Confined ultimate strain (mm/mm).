import pandas as pd 
import numpy as np 
import pickle
import tkinter as tk
import pickleshare
from sklearn.ensemble import RandomForestRegressor
# Load the Random Forest model
#file_name = "rf_final.pkl"
#rf_model_loaded = pickle.load(open(file_name, "rb"))

# Load the model from the pickle file
with open("rf_femstructureoutput2.pkl", "rb") as file:
    rfr_loaded = pickle.load(file)
# tkinter GUI
root = tk.Tk() 
root.title("Prediction of Confined ultimate strain (mm/mm)")

canvas1 = tk.Canvas(root, width=650, height=350)
canvas1.configure(background='#e9ecef')
canvas1.pack()

# ... (rest of the GUI code)
#adding a label to the root window
#label0 = tk.Label(root, text='Developed by Er. Rakesh Kumar* and Prof. Pijush Samui**',font=('Futura Md Bt', 13, 'bold'),bg='#e9ecef')
#canvas1.create_window(20, 20, anchor="w", window=label0)
#label_phd = tk.Label(root, text='*NIT Patna, and **NIT Patna',font=('Futura Md Bt',12),bg='#e9ecef')
#canvas1.create_window(20, 50, anchor="w",window=label_phd)
#label_city = tk.Label(root, text='India',font=('Futura Md Bt',12),bg='#e9ecef')
#canvas1.create_window(20, 80, anchor="w",window=label_city)
#label_mail = tk.Label(root, text='Email: rakeshk.ph21.ce@nitp.ac.in',font=('Futura Md Bt',12),bg='#e9ecef')
#canvas1.create_window(20, 110, anchor="w",window=label_mail)


label_input = tk.Label(root, text='Input Parameters',font=('Futura Md Bt',12,'bold','italic','underline'),bg='#e9ecef')
canvas1.create_window(20, 20, anchor="w",window=label_input)

# New_Normal_Stress label and input box
label1 = tk.Label(root, text='X1:Unconfined concrete strength',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 50, anchor="w",window=label1)

entry1 = tk.Entry (root) # create 1st entry box
canvas1.create_window(580, 50, window=entry1)

# New_D50 label and input box
label2 = tk.Label(root, text='X2:Area of concrete core only without the hole or internal steel tube',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 90, anchor="w",window=label2)

entry2 = tk.Entry (root) # create 2nd entry box
canvas1.create_window(580, 90, window=entry2)

# New_FC label and input box
label3 = tk.Label(root, text='X3:Area of inner steel tube',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 130, anchor="w",window=label3)

entry3 = tk.Entry (root) # create 3rd entry box
canvas1.create_window(580, 130, window=entry3)

# New_Length of geogrid label and input box
label4 = tk.Label(root, text='X4:Yeild strength of internal steel tube',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 170, anchor="w",window=label4)

entry4 = tk.Entry (root) # create 4th entry box
canvas1.create_window(580, 170, window=entry4)

# New_Spacing between geogrid longitudinal members label and input box
label5 = tk.Label(root, text='X5:Total thickness of FRP wraps multiplied with its elastic modulus',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 210, anchor="w",window=label5)

entry5 = tk.Entry (root) # create 5th entry box
canvas1.create_window(580, 210, window=entry5) 


# New_Ultimate Tensile Strength of Geogrid label and input box
#label7 = tk.Label(root, text='Input 7: ',font=('Futura Md Bt',12),bg='#e9ecef')
#canvas1.create_window(20, 350, anchor="w",window=label7)

#entry7 = tk.Entry (root) # create 7th entry box
#canvas1.create_window(480, 350, window=entry7)

label0000 = tk.Label(root, text='Output',font=('Futura Md Bt',12,'bold','italic','underline'),bg='#e9ecef')
canvas1.create_window(20, 250, anchor="w",window=label0000)

label_out = tk.Label(root, text='Y2:Confined ultimate strain (mm/mm)',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 300, anchor="w",window=label_out)

#entry_out = tk.Entry (root) # create box for output
#canvas1.create_window(480, 450, window=entry_out)

def values(): 
    global New_Input_1 # our 1st input variable
    New_Input_1 = float(entry1.get())  
    
    global New_Input_2 # our 2nd input variable
    New_Input_2 = float(entry2.get())

    global New_Input_3 # our 3rd input variable
    New_Input_3 = float(entry3.get()) 

    global New_Input_4 # our 4th input variable
    New_Input_4 = float(entry4.get()) 

    global New_Input_5 # our 5th input variable
    New_Input_5 = float(entry5.get()) 


    #global New_Input_7 # our 7th input variable
    #New_Input_7 = float(entry7.get()) / 1000
    
    data = np.array([[New_Input_1, New_Input_2, New_Input_3, New_Input_4, New_Input_5]])
    Input_data = pd.DataFrame(data, columns=['Input_1', 'Input_2', 'Input_3', 'Input_4', 'Input_5'])

    # Predict using the loaded Random Forest model
    Prediction_result = np.around(rfr_loaded.predict(Input_data), 5)

    # Display the prediction on the GUI
    label_Prediction = tk.Label(root, text=str(Prediction_result).lstrip('[').rstrip(']'), bg='white')
    canvas1.create_window(580, 300, anchor="w", window=label_Prediction)

# ... (rest of the GUI code)
button1 = tk.Button (root, text= 'Predict',command=values, bg='white') # button to call the 'values' command above 
canvas1.create_window(580, 250, anchor="w",window=button1)
root.mainloop()
